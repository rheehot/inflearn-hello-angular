{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/app/app.component.html","webpack:///./src/app/components/app/app.component.ts","webpack:///./src/app/components/task/task-create.component.html","webpack:///./src/app/components/task/task-create.component.ts","webpack:///./src/app/components/task/task-edit.component.html","webpack:///./src/app/components/task/task-edit.component.ts","webpack:///./src/app/components/task/task-list.component.html","webpack:///./src/app/components/task/task-list.component.ts","webpack:///./src/app/services/task-api.service.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TaskListComponent } from \"./components/task/task-list.component\";\r\nimport { AppComponent } from \"./components/app/app.component\"\r\nimport { TaskCreateComponent } from \"./components/task/task-create.component\";\r\nimport { TaskEditComponent } from \"./components/task/task-edit.component\";\r\nimport { HashLocationStrategy, LocationStrategy } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nconst appRoutes: Routes = [\r\n    {path: 'list', component: TaskListComponent},\r\n    {path: 'edit/:id', component: TaskEditComponent},\r\n    {path: 'create', component: TaskCreateComponent},\r\n    {path: '', component: TaskListComponent},\r\n    {path: '*', component: TaskListComponent},\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TaskListComponent,\r\n        TaskCreateComponent,\r\n        TaskEditComponent,\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        RouterModule.forRoot(appRoutes)\r\n    ],\r\n    providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  providers: []\r\n})\r\nexport class AppComponent {\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <form [formGroup]=\\\"taskModel\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"createValue()\\\">\\r\\n\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"title\\\" class=\\\"col-xs-2\\\">Title</label>\\r\\n                <div class=\\\"col-xs-6\\\">\\r\\n                    <input class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"Title\\\" formControlName=\\\"title\\\"/>\\r\\n                    <span [hidden]=\\\"!taskModel.hasError('required', 'value')\\\">Title is required..</span>\\r\\n                    <span [hidden]=\\\"!taskModel.hasError('minlength', 'value')\\\">At least 2 characters in length</span>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"col-xs-2\\\">Description</label>\\r\\n                <div class=\\\"col-xs-6\\\">\\r\\n                    <input class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\"/>\\r\\n                    <span [hidden]=\\\"!taskModel.hasError('required', 'value')\\\">Description is required..</span>\\r\\n                    <span [hidden]=\\\"!taskModel.hasError('minlength', 'value')\\\">At least 2 characters in length</span>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\"/>\\r\\n            <a [routerLink]=\\\"['/list']\\\">Task List</a>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { TaskApiService } from '../../services/task-api.service'\r\nimport { Router } from '@angular/router'\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'create-task',\r\n    templateUrl: 'task-create.component.html',\r\n    providers: [ TaskApiService ]\r\n})\r\nexport class TaskCreateComponent {\r\n\r\n    taskModel: FormGroup;\r\n\r\n    constructor(private taskApiService: TaskApiService, private router: Router, fb: FormBuilder) {\r\n        this.taskModel = fb.group({\r\n            \"title\": ['', [Validators.required, Validators.minLength(2)]],\r\n            \"description\": ['', [Validators.required, Validators.minLength(2)]]\r\n        })\r\n    }\r\n\r\n    createValue() {\r\n        let task = this.taskModel.value;\r\n        if (this.taskModel.valid) {\r\n            this.taskApiService.createTask(task).subscribe(createdTask => {\r\n                console.debug(\"created task: \" + createdTask);\r\n                this.router.navigate(['list']);\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <form [formGroup]=\\\"taskModel\\\" class=\\\"form-horizontal\\\" (ngSubmit)=\\\"updateValue()\\\">\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"id\\\"/>\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"version\\\"/>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"title\\\" class=\\\"col-xs-2\\\">Title</label>\\r\\n                <div class=\\\"col-xs-6\\\">\\r\\n                    <input class=\\\"form-control\\\" id=\\\"title\\\" placeholder=\\\"Title\\\" formControlName=\\\"title\\\"/>\\r\\n                    <span [hidden]=\\\"!taskModel.hasError('required', 'value')\\\">Title is required..</span>\\r\\n                    <span [hidden]=\\\"!taskModel.hasError('minlength', 'value')\\\">At least 2 characters in length</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"col-xs-2\\\">Description</label>\\r\\n                <div class=\\\"col-xs-6\\\">\\r\\n                    <input class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Description\\\" formControlName=\\\"description\\\"/>\\r\\n                    <span [hidden]=\\\"!taskModel.hasError('required', 'value')\\\">Description is required..</span>\\r\\n                    <span [hidden]=\\\"!taskModel.hasError('minlength', 'value')\\\">At least 2 characters in length</span>\\r\\n                </div>\\r\\n            </div>\\r\\n            <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\"/>\\r\\n            <a [routerLink]=\\\"['/list']\\\">Task List</a>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { TaskApiService } from \"../../services/task-api.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { OnInit, Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'edit-task',\r\n    templateUrl: 'task-edit.component.html',\r\n    providers: [TaskApiService]\r\n})\r\nexport class TaskEditComponent implements OnInit {\r\n    taskModel: FormGroup;\r\n\r\n    constructor(private taskApiService: TaskApiService,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private fb: FormBuilder) {\r\n        this.taskModel = this.fb.group({\r\n            \"id\": [],\r\n            \"title\": ['', Validators.required],\r\n            \"description\": ['', Validators.required],\r\n            \"version\": ['']\r\n        })\r\n    }\r\n\r\n    updateValue() {\r\n        let task = this.taskModel.value;\r\n        if (this.taskModel.valid) {\r\n            this.taskApiService.updateTask(task).subscribe(updatedValue =>\r\n                this.router.navigate(['list'])\r\n            )\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        let taskId = this.route.snapshot.params[\"id\"];\r\n        this.taskApiService\r\n            .getTask(taskId).subscribe(value =>\r\n            this.taskModel = this.fb.group({\r\n                \"id\": [value.id],\r\n                \"title\": [value.title, [Validators.required, Validators.minLength(2)]],\r\n                \"description\": [value.description, [Validators.required, Validators.minLength(2)]],\r\n                \"version\": [value.version]\r\n            })\r\n        )\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <table class=\\\"table table-bordered table-striped\\\" *ngIf=\\\"tasks$ | async as tasks\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th>Value</th>\\r\\n                <th>Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n            <tr *ngFor=\\\"let task of tasks.content; let e = even;\\\">\\r\\n                <td>{{ task.title }}</td>\\r\\n                <td><a [routerLink]=\\\"['/edit', task.id]\\\">Edit</a></td>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <a [routerLink]=\\\"['/create']\\\">New Value</a>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { TaskApiService } from '../../services/task-api.service'\r\nimport { Task } from 'app/models/task';\r\nimport { Observable } from \"rxjs\";\r\nimport { Page } from \"../../models/common\";\r\n\r\n@Component({\r\n    selector: 'tasks',\r\n    templateUrl: 'task-list.component.html',\r\n    providers: [TaskApiService]\r\n})\r\nexport class TaskListComponent implements OnInit {\r\n    tasks$: Observable<Page<Task>>;\r\n\r\n    constructor(private taskApiService: TaskApiService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.tasks$ = this.taskApiService.getTasks();\r\n        this.taskApiService.subscribe()\r\n            .subscribe({\r\n                next: (event: MessageEvent) => {\r\n                    console.log(\"Observer : \" + event.data);\r\n                    this.tasks$ = this.taskApiService.getTasks()\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Task } from 'app/models/task';\r\nimport { Page } from \"../models/common\";\r\n\r\n\r\n@Injectable()\r\nexport class TaskApiService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getTasks(): Observable<Page<Task>> {\r\n        return this.http.get<Page<Task>>(\"/api/tasks\");\r\n    }\r\n\r\n    getTask(id: number): Observable<Task> {\r\n        return this.http.get<Task>(`/api/tasks/${id}`);\r\n    }\r\n\r\n    createTask(task: Task): Observable<Task> {\r\n        let bodyString = JSON.stringify(task);\r\n        const httpOptions = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\r\n        console.log(\"Creating Task : \" + bodyString);\r\n        return this.http.post<Task>(\"/api/tasks\", bodyString, httpOptions);\r\n    }\r\n\r\n    updateTask(task: Task): Observable<Task> {\r\n        let bodyString = JSON.stringify(task);\r\n        const httpOptions = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\r\n        console.log(\"Updating Task : \" + bodyString);\r\n        return this.http.put<Task>(\"/api/tasks/\" + task.id, bodyString, httpOptions)\r\n    }\r\n\r\n    subscribe(): Subject<any> {\r\n        let eventSource = new EventSource(\"/api/tasks/subscribe\");\r\n        let subscription = new Subject();\r\n        eventSource.addEventListener(\"message\", event => {\r\n            console.info(\"Got event: \" + event.data);\r\n            subscription.next(event);\r\n        });\r\n        return subscription;\r\n    }\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}